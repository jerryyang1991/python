# 1 Gold Star

# The built-in <string>.split() procedure works
# okay, but fails to find all the words on a page
# because it only uses whitespace to split the
# string. To do better, we should also use punctuation
# marks to split the page into words.

# Define a procedure, split_string, that takes two
# inputs: the string to split and a string containing
# all of the characters considered separators. The
# procedure should return a list of strings that break
# the source string up by the characters in the
# splitlist.


def split_string(source,splitlist):
    nl=[]
    sp=0
    while source!="":
        i=0
        tnl=[]
        while i<len(splitlist):
            ep=source.find(splitlist[i],sp)
            if ep!=-1:
                tnl.append(ep)
            i=i+1
        if tnl!=[]:
            c=tnl[0]
            for j in tnl:
                if j<c:
                    c=j
            if c==len(source)-1:
                nl.append(source[sp:c])
                break
            d=c-sp
            if d!=0:
                nl.append(source[sp:c])
                sp=c+1
            else:
                sp=sp+1
        else:
            nl.append(source[sp:])
            break
    return nl
              



out = split_string("This is a test-of the,string separation-code!"," ,!-")
print out
#>>> ['This', 'is', 'a', 'test', 'of', 'the', 'string', 'separation', 'code']

out = split_string("After  the flood   ...  all the colors came out.", " .")
print out
#>>> ['After', 'the', 'flood', 'all', 'the', 'colors', 'came', 'out']

out = split_string("First Name,Last Name,Street Address,City,State,Zip Code",",")
print out
#>>>['First Name', 'Last Name', 'Street Address', 'City', 'State', 'Zip Code']
